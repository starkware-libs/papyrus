[package]
name = "papyrus_storage"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "A storage implementation for a Starknet node."

[features]
testing = [
    "tempfile",
]

[dependencies]
byteorder.workspace = true
cairo-lang-starknet.workspace = true
cairo-lang-casm.workspace = true
cairo-lang-utils.workspace = true
flate2.workspace = true
indexmap = { workspace = true, features = ["serde"] }
integer-encoding.workspace = true
libmdbx = { workspace = true, features = ["lifetimed-bytes"] }
num-bigint.workspace = true
primitive-types.workspace = true
papyrus_config = { path = "../papyrus_config", version = "0.0.4" }
parity-scale-codec.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
starknet_api.workspace = true
tempfile = { workspace = true, optional = true }
thiserror.workspace = true
tracing = { workspace = true, features = ["log"] }

[dev-dependencies]
assert_matches.workspace = true
camelpaste.workspace = true
insta = { workspace = true, features = ["yaml"] }
num-traits.workspace = true
paste.workspace = true
pretty_assertions.workspace = true
rand.workspace = true
rand_chacha.workspace = true
schemars = {workspace = true, features = ["preserve_order"] }
tempfile = { workspace = true}
test_utils = { path = "../test_utils"}
tokio = { workspace = true, features = ["full", "sync"] }
