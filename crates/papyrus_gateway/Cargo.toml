[package]
name = "papyrus_gateway"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true

[dependencies]
anyhow.workspace = true
base64.workspace = true
futures.workspace = true
futures-util.workspace = true
hyper = { workspace = true, features = ["full"] }
jsonrpsee = { workspace = true, features = ["full"] }
papyrus_proc_macros = { path = "../papyrus_proc_macros"}
papyrus_storage = { path = "../papyrus_storage" }
starknet_writer_client = { path = "../starknet_writer_client" }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
starknet_api.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tokio-stream.workspace = true
tower = { workspace = true, features = ["full"]}
tracing.workspace = true
url.workspace = true

[dev-dependencies]
assert_matches.workspace = true
camelpaste.workspace = true
hex.workspace = true
jsonschema.workspace = true
papyrus_storage = { path = "../papyrus_storage", features = ["testing"] }
pretty_assertions.workspace = true
rand_chacha.workspace = true
test_utils = { path = "../test_utils" }
starknet_api = { workspace = true, features = ["testing"] }
starknet_writer_client = { path = "../starknet_writer_client", features = ["testing"] }
indexmap = { workspace = true, features = ["serde"] }
