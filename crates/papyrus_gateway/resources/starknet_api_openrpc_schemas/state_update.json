{
    "type": "object",
    "properties": {
        "block_hash": {
            "$ref": "#/$components/$schemas/BLOCK_HASH"
        },
        "new_root": {
            "description": "The new global state root",
            "$ref": "#/$components/$schemas/FELT"
        },
        "old_root": {
            "description": "The previous global state root",
            "$ref": "#/$components/$schemas/FELT"
        },
        "state_diff": {
            "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
            "type": "object",
            "properties": {
                "storage_diffs": {
                    "type": "array",
                    "items": {
                        "description": "The changes in the storage per contract address",
                        "$ref": "#/$components/$schemas/CONTRACT_STORAGE_DIFF_ITEM"
                    }
                },
                "declared_contract_hashes": {
                    "type": "array",
                    "items": {
                        "description": "The hash of a new contract declared as part of the new state",
                        "$ref": "#/$components/$schemas/FELT"
                    }
                },
                "deployed_contracts": {
                    "type": "array",
                    "items": {
                        "description": "A new contract deployed as part of the new state",
                        "$ref": "#/$components/$schemas/DEPLOYED_CONTRACT_ITEM"
                    }
                },
                "nonces": {
                    "type": "array",
                    "items": {
                        "description": "The updated nonce per contract address",
                        "type": "object",
                        "properties": {
                            "contract_address": {
                                "description": "The address of the contract",
                                "$ref": "#/$components/$schemas/ADDRESS"
                            },
                            "nonce": {
                                "description": "The nonce for the given address at the end of the block",
                                "$ref": "#/$components/$schemas/FELT"
                            }
                        }
                    }
                }
            }
        }
    },
    "$components": {
        "$schemas": {
            "RESULT_PAGE_REQUEST": {
                "type": "object",
                "properties": {
                    "continuation_token": {
                        "description": "a pointer to the last element of the delivered page, use this token in a subsequent query to obtain the next page",
                        "type": "string"
                    },
                    "chunk_size": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "chunk_size"
                ]
            },
            "EMITTED_EVENT": {
                "title": "An event emitted as a result of transaction execution",
                "description": "Event information decorated with metadata on where it was emitted",
                "allOf": [
                    {
                        "title": "The event information",
                        "$ref": "#/$components/$schemas/EVENT"
                    },
                    {
                        "title": "The event emission information",
                        "type": "object",
                        "properties": {
                            "block_hash": {
                                "title": "The hash of the block in which the event was emitted",
                                "$ref": "#/$components/$schemas/BLOCK_HASH"
                            },
                            "block_number": {
                                "title": "The number of the block in which the event was emitted",
                                "$ref": "#/$components/$schemas/BLOCK_NUMBER"
                            },
                            "transaction_hash": {
                                "title": "The transaction that emitted the event",
                                "$ref": "#/$components/$schemas/TXN_HASH"
                            }
                        }
                    }
                ]
            },
            "EVENT": {
                "title": "A StarkNet event",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "from_address": {
                                "$ref": "#/$components/$schemas/ADDRESS"
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/EVENT_CONTENT"
                    }
                ]
            },
            "EVENT_CONTENT": {
                "title": "Event Content",
                "description": "The content of an event",
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    }
                }
            },
            "EVENT_FILTER": {
                "title": "An event filter/query",
                "type": "object",
                "properties": {
                    "from_block": {
                        "title": "from block",
                        "$ref": "#/$components/$schemas/BLOCK_ID"
                    },
                    "to_block": {
                        "title": "to block",
                        "$ref": "#/$components/$schemas/BLOCK_ID"
                    },
                    "address": {
                        "title": "from contract",
                        "$ref": "#/$components/$schemas/ADDRESS"
                    },
                    "keys": {
                        "title": "filter key values",
                        "description": "The values used to filter the events",
                        "type": "array",
                        "items": {
                            "title": "Possible values, per key",
                            "description": "Per key (by position), designate the possible values to be matched for events to be returned. Empty array designates 'any' value",
                            "type": "array",
                            "items": {
                                "$ref": "#/$components/$schemas/FELT"
                            }
                        }
                    }
                }
            },
            "BLOCK_ID": {
                "title": "Block hash, number or tag",
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "block_hash": {
                                "$ref": "#/$components/$schemas/BLOCK_HASH"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "block_number": {
                                "$ref": "#/$components/$schemas/BLOCK_NUMBER"
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/BLOCK_TAG"
                    }
                ]
            },
            "BLOCK_TAG": {
                "type": "string",
                "description": "A tag specifying a dynamic reference to a block",
                "enum": [
                    "latest",
                    "pending"
                ]
            },
            "NUM_AS_HEX": {
                "title": "An integer number in hex format (0x...)",
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]+$"
            },
            "ADDRESS": {
                "$ref": "#/$components/$schemas/FELT"
            },
            "STORAGE_KEY": {
                "type": "string",
                "title": "A storage key",
                "$comment": "A storage key, represented as a string of hex digits",
                "description": "A storage key. Represented as up to 62 hex digits, 3 bits, and 5 leading zeroes.",
                "pattern": "^0x0[0-7]{1}[a-fA-F0-9]{0,62}$"
            },
            "ETH_ADDRESS": {
                "type": "string",
                "$comment": "An ethereum address",
                "description": "an ethereum address represented as 40 hex digits",
                "pattern": "^0x[a-fA-F0-9]{40}$"
            },
            "TXN_HASH": {
                "$ref": "#/$components/$schemas/FELT",
                "description": "The transaction hash, as assigned in StarkNet",
                "title": "A transaction's hash"
            },
            "FELT": {
                "type": "string",
                "title": "Field element",
                "$comment": "A field element, represented as a string of hex digits",
                "description": "A field element. Represented as 4 leading zero bits followed by 63 hex digits",
                "pattern": "^0x[a-fA-F0-9]{1,63}$"
            },
            "BLOCK_NUMBER": {
                "description": "The block's number (its height)",
                "type": "integer",
                "minimum": 0
            },
            "BLOCK_HASH": {
                "$ref": "#/$components/$schemas/FELT"
            },
            "BLOCK_BODY_WITH_TX_HASHES": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "description": "The hashes of the transactions included in this block",
                        "type": "array",
                        "items": {
                            "description": "The hash of a single transaction",
                            "$ref": "#/$components/$schemas/TXN_HASH"
                        }
                    }
                }
            },
            "BLOCK_BODY_WITH_TXS": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "description": "The transactions in this block",
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/TXN"
                        }
                    }
                }
            },
            "BLOCK_HEADER": {
                "block_hash": {
                    "$ref": "#/$components/$schemas/BLOCK_HASH"
                },
                "parent_hash": {
                    "description": "The hash of this block's parent",
                    "$ref": "#/$components/$schemas/BLOCK_HASH"
                },
                "block_number": {
                    "description": "The block number (its height)",
                    "$ref": "#/$components/$schemas/BLOCK_NUMBER"
                },
                "new_root": {
                    "description": "The new global state root",
                    "$ref": "#/$components/$schemas/FELT"
                },
                "timestamp": {
                    "description": "The time in which the block was created, encoded in Unix time",
                    "type": "integer",
                    "minimum": 0
                },
                "sequencer_address": {
                    "description": "The StarkNet identity of the sequencer submitting this block",
                    "$ref": "#/$components/$schemas/FELT"
                }
            },
            "BLOCK_WITH_TX_HASHES": {
                "title": "The block object",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "$ref": "#/$components/$schemas/BLOCK_STATUS"
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/BLOCK_HEADER"
                    },
                    {
                        "$ref": "#/$components/$schemas/BLOCK_BODY_WITH_TX_HASHES"
                    }
                ]
            },
            "BLOCK_WITH_TXS": {
                "title": "The block object",
                "allOf": [
                    {
                        "status": {
                            "$ref": "#/$components/$schemas/BLOCK_STATUS"
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/BLOCK_HEADER"
                    },
                    {
                        "$ref": "#/$components/$schemas/BLOCK_BODY_WITH_TXS"
                    }
                ]
            },
            "DEPLOYED_CONTRACT_ITEM": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "The address of the contract",
                        "$ref": "#/$components/$schemas/FELT"
                    },
                    "class_hash": {
                        "description": "The hash of the contract code",
                        "$ref": "#/$components/$schemas/FELT"
                    }
                }
            },
            "CONTRACT_STORAGE_DIFF_ITEM": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "The contract address for which the storage changed",
                        "$ref": "#/$components/$schemas/FELT"
                    },
                    "storage_entries": {
                        "description": "The changes in the storage of the contract",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "description": "The key of the changed value",
                                    "$ref": "#/$components/$schemas/FELT"
                                },
                                "value": {
                                    "description": "The new value applied to the given address",
                                    "$ref": "#/$components/$schemas/FELT"
                                }
                            }
                        }
                    }
                }
            },
            "TXN": {
                "title": "Transaction",
                "description": "The transaction schema, as it appears inside a block",
                "oneOf": [
                    {
                        "$ref": "#/$components/$schemas/INVOKE_TXN"
                    },
                    {
                        "$ref": "#/$components/$schemas/L1_HANDLER_TXN"
                    },
                    {
                        "$ref": "#/$components/$schemas/DECLARE_TXN"
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_TXN"
                    },
                    {
                        "ref": "#/$components/$schemas/DEPLOY_ACCOUNT_TXN"
                    }
                ]
            },
            "BROADCASTED_TXN": {
                "description": "the transaction's representation when it's sent to the sequencer (but not yet in a block)",
                "title": "Transaction",
                "oneOf": [
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_INVOKE_TXN"
                    },
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_DECLARE_TXN"
                    },
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_DEPLOY_TXN"
                    },
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_DEPLOY_ACCOUNT_TXN"
                    }
                ]
            },
            "SIGNATURE": {
                "title": "A transaction signature",
                "type": "array",
                "items": {
                    "$ref": "#/$components/$schemas/FELT"
                }
            },
            "BROADCASTED_TXN_COMMON_PROPERTIES": {
                "type": "object",
                "description": "common properties of a transaction that is sent to the sequencer (but is not yet in a block)",
                "properties": {
                    "type": {
                        "$ref": "#/$components/$schemas/TXN_TYPE"
                    },
                    "max_fee": {
                        "$ref": "#/$components/$schemas/FELT",
                        "description": "The maximal fee that can be charged for including the transaction"
                    },
                    "version": {
                        "description": "Version of the transaction scheme",
                        "$ref": "#/$components/$schemas/NUM_AS_HEX"
                    },
                    "signature": {
                        "$ref": "#/$components/$schemas/SIGNATURE"
                    },
                    "nonce": {
                        "$ref": "#/$components/$schemas/FELT"
                    }
                }
            },
            "COMMON_TXN_PROPERTIES": {
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "transaction_hash": {
                                "$ref": "#/$components/$schemas/TXN_HASH",
                                "description": "The hash identifying the transaction"
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_TXN_COMMON_PROPERTIES"
                    }
                ]
            },
            "DECLARE_TXN": {
                "title": "Declare Contract Transaction",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/COMMON_TXN_PROPERTIES"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "class_hash": {
                                "description": "The hash of the declared class",
                                "$ref": "#/$components/$schemas/FELT"
                            },
                            "sender_address": {
                                "description": "The address of the account contract sending the declaration transaction",
                                "$ref": "#/$components/$schemas/ADDRESS"
                            }
                        }
                    }
                ]
            },
            "BROADCASTED_DECLARE_TXN": {
                "title": "mempool representation of a declare transaction",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_TXN_COMMON_PROPERTIES"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contract_class": {
                                "description": "The class to be declared",
                                "schema": {
                                    "$ref": "#/$components/$schemas/CONTRACT_CLASS"
                                }
                            },
                            "sender_address": {
                                "description": "The address of the account contract sending the declaration transaction",
                                "$ref": "#/$components/$schemas/ADDRESS"
                            }
                        }
                    }
                ]
            },
            "DEPLOY_ACCOUNT_TXN": {
                "title": "Deploy Account Transaction",
                "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/COMMON_TXN_PROPERTIES"
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_ACCOUNT_TXN_PROPERTIES"
                    }
                ]
            },
            "BROADCASTED_DEPLOY_ACCOUNT_TXN": {
                "description": "Mempool representation of a deploy account transaction",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_TXN_COMMON_PROPERTIES"
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_ACCOUNT_TXN_PROPERTIES"
                    }
                ]
            },
            "DEPLOY_ACCOUNT_TXN_PROPERTIES": {
                "type": "object",
                "properties": {
                    "contract_address_salt": {
                        "description": "The salt for the address of the deployed contract",
                        "$ref": "#/$components/$schemas/FELT"
                    },
                    "constructor_calldata": {
                        "type": "array",
                        "description": "The parameters passed to the constructor",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    },
                    "class_hash": {
                        "description": "The hash of the deployed contract's class",
                        "$ref": "#/$components/$schemas/FELT"
                    }
                }
            },
            "DEPLOY_TXN": {
                "title": "Deploy Contract Transaction",
                "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "transaction_hash": {
                                "$ref": "#/$components/$schemas/TXN_HASH",
                                "description": "The hash identifying the transaction"
                            },
                            "class_hash": {
                                "description": "The hash of the deployed contract's class",
                                "$ref": "#/$components/$schemas/FELT"
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_TXN_PROPERTIES"
                    }
                ]
            },
            "BROADCASTED_DEPLOY_TXN": {
                "title": "mempool representation of a deploy transaction",
                "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "contract_class": {
                                "description": "The class of the contract that will be deployed",
                                "schema": {
                                    "$ref": "#/$components/$schemas/CONTRACT_CLASS"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_TXN_PROPERTIES"
                    }
                ]
            },
            "DEPLOY_TXN_PROPERTIES": {
                "type": "object",
                "properties": {
                    "version": {
                        "description": "Version of the transaction scheme",
                        "$ref": "#/$components/$schemas/NUM_AS_HEX"
                    },
                    "type": {
                        "$ref": "#/$components/$schemas/TXN_TYPE"
                    },
                    "contract_address_salt": {
                        "description": "The salt for the address of the deployed contract",
                        "$ref": "#/$components/$schemas/FELT"
                    },
                    "constructor_calldata": {
                        "type": "array",
                        "description": "The parameters passed to the constructor",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    }
                }
            },
            "INVOKE_TXN_V0": {
                "title": "version 0 invoke transaction",
                "description": "invokes a specific function in the desired contract (not necessarily an account)",
                "$ref": "#/$components/$schemas/FUNCTION_CALL"
            },
            "INVOKE_TXN_V1": {
                "title": "version 1 invoke transaction",
                "description": "initiates a transaction from a given account",
                "type": "object",
                "properties": {
                    "sender_address": {
                        "$ref": "#/$components/$schemas/ADDRESS"
                    },
                    "calldata": {
                        "type": "array",
                        "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    }
                }
            },
            "INVOKE_TXN": {
                "title": "Initiate a transaction from an account",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/COMMON_TXN_PROPERTIES"
                    },
                    {
                        "oneOf": [
                            {
                                "$ref": "#/$components/$schemas/INVOKE_TXN_V0"
                            },
                            {
                                "$ref": "#/$components/$schemas/INVOKE_TXN_V1"
                            }
                        ]
                    }
                ]
            },
            "BROADCASTED_INVOKE_TXN": {
                "description": "mempool representation of an invoke transaction",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/BROADCASTED_TXN_COMMON_PROPERTIES"
                    },
                    {
                        "oneOf": [
                            {
                                "$ref": "#/$components/$schemas/INVOKE_TXN_V0"
                            },
                            {
                                "$ref": "#/$components/$schemas/INVOKE_TXN_V1"
                            }
                        ]
                    }
                ]
            },
            "L1_HANDLER_TXN": {
                "allOf": [
                    {
                        "type": "object",
                        "title": "l1-->l2 message transaction",
                        "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                        "properties": {
                            "transaction_hash": {
                                "$ref": "#/$components/$schemas/TXN_HASH",
                                "description": "The hash identifying the transaction"
                            },
                            "version": {
                                "description": "Version of the transaction scheme",
                                "$ref": "#/$components/$schemas/NUM_AS_HEX"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "L1_HANDLER"
                                ]
                            },
                            "nonce": {
                                "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                "$ref": "#/$components/$schemas/NUM_AS_HEX"
                            }
                        }
                    },
                    {
                        "$ref": "#/$components/$schemas/FUNCTION_CALL"
                    }
                ]
            },
            "COMMON_RECEIPT_PROPERTIES": {
                "title": "Common properties for a transaction receipt",
                "type": "object",
                "properties": {
                    "transaction_hash": {
                        "$ref": "#/$components/$schemas/TXN_HASH",
                        "description": "The hash identifying the transaction"
                    },
                    "actual_fee": {
                        "$ref": "#/$components/$schemas/FELT",
                        "description": "The fee that was charged by the sequencer"
                    },
                    "status": {
                        "$ref": "#/$components/$schemas/TXN_STATUS"
                    },
                    "block_hash": {
                        "$ref": "#/$components/$schemas/BLOCK_HASH"
                    },
                    "block_number": {
                        "$ref": "#/$components/$schemas/BLOCK_NUMBER"
                    },
                    "type": {
                        "$ref": "#/$components/$schemas/TXN_TYPE"
                    },
                    "messages_sent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/MSG_TO_L1"
                        }
                    },
                    "events": {
                        "description": "The events emitted as part of this transaction",
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/EVENT"
                        }
                    }
                },
                "required": [
                    "transaction_hash",
                    "actual_fee",
                    "status",
                    "block_hash",
                    "block_number",
                    "type",
                    "messages_sent",
                    "events"
                ]
            },
            "INVOKE_TXN_RECEIPT": {
                "title": "Invoke Transaction Receipt",
                "$ref": "#/$components/$schemas/COMMON_RECEIPT_PROPERTIES"
            },
            "DECLARE_TXN_RECEIPT": {
                "title": "Declare Transaction Receipt",
                "$ref": "#/$components/$schemas/COMMON_RECEIPT_PROPERTIES"
            },
            "DEPLOY_ACCOUNT_TXN_RECEIPT": {
                "title": "Deploy Account Transaction Receipt",
                "$ref": "#/$components/$schemas/DEPLOY_TXN_RECEIPT"
            },
            "DEPLOY_TXN_RECEIPT": {
                "title": "Deploy Transaction Receipt",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/COMMON_RECEIPT_PROPERTIES"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contract_address": {
                                "description": "The address of the deployed contract",
                                "$ref": "#/$components/$schemas/FELT"
                            }
                        }
                    }
                ]
            },
            "L1_HANDLER_TXN_RECEIPT": {
                "title": "receipt for l1 handler transaction",
                "$ref": "#/$components/$schemas/COMMON_RECEIPT_PROPERTIES"
            },
            "TXN_RECEIPT": {
                "oneOf": [
                    {
                        "$ref": "#/$components/$schemas/INVOKE_TXN_RECEIPT"
                    },
                    {
                        "$ref": "#/$components/$schemas/L1_HANDLER_TXN_RECEIPT"
                    },
                    {
                        "$ref": "#/$components/$schemas/DECLARE_TXN_RECEIPT"
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_TXN_RECEIPT"
                    },
                    {
                        "$ref": "#/$components/$schemas/DEPLOY_ACCOUNT_TXN_RECEIPT"
                    }
                ]
            },
            "MSG_TO_L1": {
                "type": "object",
                "properties": {
                    "to_address": {
                        "description": "The target L1 address the message is sent to",
                        "$ref": "#/$components/$schemas/FELT"
                    },
                    "payload": {
                        "description": "The payload of the message",
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    }
                }
            },
            "TXN_STATUS": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "ACCEPTED_ON_L2",
                    "ACCEPTED_ON_L1",
                    "REJECTED"
                ],
                "description": "The status of the transaction"
            },
            "TXN_TYPE": {
                "type": "string",
                "enum": [
                    "DECLARE",
                    "DEPLOY",
                    "DEPLOY_ACCOUNT",
                    "INVOKE",
                    "L1_HANDLER"
                ],
                "description": "The type of the transaction"
            },
            "BLOCK_STATUS": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "ACCEPTED_ON_L2",
                    "ACCEPTED_ON_L1",
                    "REJECTED"
                ],
                "description": "The status of the block"
            },
            "FUNCTION_CALL": {
                "type": "object",
                "title": "Function call information",
                "properties": {
                    "contract_address": {
                        "$ref": "#/$components/$schemas/ADDRESS"
                    },
                    "entry_point_selector": {
                        "$ref": "#/$components/$schemas/FELT"
                    },
                    "calldata": {
                        "type": "array",
                        "description": "The parameters passed to the function",
                        "items": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    }
                }
            },
            "CONTRACT_CLASS": {
                "title": "The definition of a StarkNet contract class",
                "type": "object",
                "properties": {
                    "program": {
                        "type": "string",
                        "description": "A base64 representation of the compressed program code",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"
                    },
                    "entry_points_by_type": {
                        "type": "object",
                        "properties": {
                            "CONSTRUCTOR": {
                                "schema": {
                                    "$ref": "#/$components/$schemas/CONTRACT_ENTRY_POINT_LIST"
                                }
                            },
                            "EXTERNAL": {
                                "schema": {
                                    "$ref": "#/$components/$schemas/CONTRACT_ENTRY_POINT_LIST"
                                }
                            },
                            "L1_HANDLER": {
                                "schema": {
                                    "$ref": "#/$components/$schemas/CONTRACT_ENTRY_POINT_LIST"
                                }
                            }
                        }
                    },
                    "abi": {
                        "schema": {
                            "$ref": "#/$components/$schemas/CONTRACT_ABI"
                        }
                    }
                },
                "required": [
                    "program",
                    "entry_points_by_type"
                ]
            },
            "CONTRACT_ENTRY_POINT_LIST": {
                "type": "array",
                "items": {
                    "$ref": "#/$components/$schemas/CONTRACT_ENTRY_POINT"
                }
            },
            "CONTRACT_ENTRY_POINT": {
                "type": "object",
                "properties": {
                    "offset": {
                        "description": "The offset of the entry point in the program",
                        "schema": {
                            "$ref": "#/$components/$schemas/NUM_AS_HEX"
                        }
                    },
                    "selector": {
                        "description": "A unique identifier of the entry point (function) in the program",
                        "schema": {
                            "$ref": "#/$components/$schemas/FELT"
                        }
                    }
                }
            },
            "CONTRACT_ABI": {
                "type": "array",
                "items": {
                    "$ref": "#/$components/$schemas/CONTRACT_ABI_ENTRY"
                }
            },
            "CONTRACT_ABI_ENTRY": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/$components/$schemas/FUNCTION_ABI_ENTRY"
                    },
                    {
                        "$ref": "#/$components/$schemas/EVENT_ABI_ENTRY"
                    },
                    {
                        "$ref": "#/$components/$schemas/STRUCT_ABI_ENTRY"
                    }
                ]
            },
            "STRUCT_ABI_TYPE": {
                "type": "string",
                "enum": [
                    "struct"
                ]
            },
            "EVENT_ABI_TYPE": {
                "type": "string",
                "enum": [
                    "event"
                ]
            },
            "FUNCTION_ABI_TYPE": {
                "type": "string",
                "enum": [
                    "function",
                    "l1_handler",
                    "constructor"
                ]
            },
            "STRUCT_ABI_ENTRY": {
                "properties": {
                    "type": {
                        "schema": {
                            "$ref": "#/$components/$schemas/STRUCT_ABI_TYPE"
                        }
                    },
                    "name": {
                        "description": "The struct name",
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/STRUCT_MEMBER"
                        }
                    }
                }
            },
            "STRUCT_MEMBER": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/$components/$schemas/TYPED_PARAMETER"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "offset": {
                                "description": "offset of this property within the struct",
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "EVENT_ABI_ENTRY": {
                "type": "object",
                "properties": {
                    "type": {
                        "schema": {
                            "$ref": "#/$components/$schemas/EVENT_ABI_TYPE"
                        }
                    },
                    "name": {
                        "description": "The event name",
                        "type": "string"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/TYPED_PARAMETER"
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/TYPED_PARAMETER"
                        }
                    }
                }
            },
            "FUNCTION_ABI_ENTRY": {
                "type": "object",
                "properties": {
                    "type": {
                        "schema": {
                            "$ref": "#/$components/$schemas/FUNCTION_ABI_TYPE"
                        }
                    },
                    "name": {
                        "description": "The function name",
                        "type": "string"
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/TYPED_PARAMETER"
                        }
                    },
                    "outputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/$components/$schemas/TYPED_PARAMETER"
                        }
                    }
                }
            },
            "TYPED_PARAMETER": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The parameter's name",
                        "type": "string"
                    },
                    "type": {
                        "description": "The parameter's type",
                        "type": "string"
                    }
                }
            },
            "FEE_ESTIMATE": {
                "type": "object",
                "properties": {
                    "gas_consumed": {
                        "description": "The Ethereum gas cost of the transaction (see https://docs.starknet.io/docs/Fees/fee-mechanism for more info)",
                        "schema": {
                            "$ref": "#/$components/$schemas/NUM_AS_HEX"
                        }
                    },
                    "gas_price": {
                        "description": "The gas price (in gwei) that was used in the cost estimation",
                        "schema": {
                            "$ref": "#/$components/$schemas/NUM_AS_HEX"
                        }
                    },
                    "overall_fee": {
                        "description": "The estimated fee for the transaction (in gwei), product of gas_consumed and gas_price",
                        "schema": {
                            "$ref": "#/$components/$schemas/NUM_AS_HEX"
                        }
                    }
                }
            }
        }
    }
}
