[package]
name = "starknet_client"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "A client implementation that can communicate with Starknet."

[features]
testing = [
    "mockall",
    "rand",
    "rand_chacha",
    "test_utils",
]

[dependencies]
async-trait.workspace = true
cairo-lang-starknet.workspace = true
http.workspace = true
indexmap = { workspace = true, features = ["serde"] }
lazy_static.workspace = true
mockall = { workspace = true, optional = true }
os_info.workspace = true
papyrus_config = { git = "https://github.com/starkware-libs/papyrus", rev = "77211ef" }
rand = { workspace = true, optional = true }
rand_chacha = { workspace = true, optional = true }
reqwest = { workspace = true, features = ["json", "blocking"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
starknet_api.workspace = true
test_utils = { path = "../test_utils", optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tokio-retry.workspace = true
tracing.workspace = true
url.workspace = true

[dev-dependencies]
assert.workspace = true
assert_matches.workspace = true
mockall.workspace = true
mockito.workspace = true
rand.workspace = true
rand_chacha.workspace = true
pretty_assertions.workspace = true
starknet_api = { workspace = true, features = ["testing"] }
test_utils = { path = "../test_utils" }
