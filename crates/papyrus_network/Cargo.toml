[package]
name = "papyrus_network"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true

[[bin]]
name = "streamed_bytes_benchmark"
required-features = ["clap"]
path = "src/bin/streamed_bytes_benchmark.rs"

[dependencies]
async-stream.workspace = true
bytes.workspace = true
chrono.workspace = true
defaultmap.workspace = true
derive_more.workspace = true
enum-iterator.workspace = true
futures.workspace = true
indexmap.workspace = true
lazy_static.workspace = true
libp2p = { workspace = true, features = [
    "gossipsub",
    "identify",
    "kad",
    "macros",
    "noise",
    "quic",
    "tcp",
    "tokio",
    "yamux",
    "serde",
] }
metrics.workspace = true
replace_with.workspace = true
papyrus_common = { path = "../papyrus_common", version = "0.4.0-dev.2" }
papyrus_config = { path = "../papyrus_config", version = "0.4.0-dev.2" }
papyrus_protobuf = { path = "../papyrus_protobuf", version = "0.4.0-dev.2" }
papyrus_storage = { path = "../papyrus_storage", version = "0.4.0-dev.2" }
prost.workspace = true
serde = { workspace = true, features = ["derive"] }
starknet_api.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tracing.workspace = true
unsigned-varint = { workspace = true, features = ["std"] }
async-trait.workspace = true

# Binaries dependencies
clap = { workspace = true, optional = true, features = ["derive"] }


[dev-dependencies]
assert_matches.workspace = true
deadqueue = { workspace = true, features = ["unlimited"] }
indexmap.workspace = true
libp2p-swarm-test.workspace = true
mockall.workspace = true
papyrus_storage = { path = "../papyrus_storage", features = ["testing"] }
pretty_assertions.workspace = true
rand.workspace = true
tokio = { workspace = true, features = ["full", "sync", "test-util"] }
tokio-stream.workspace = true
void.workspace = true
test_utils = { path = "../test_utils" }
