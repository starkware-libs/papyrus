apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "papyrus.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "papyrus.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "papyrus.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/monitoring/metrics"
        prometheus.io/port: {{ .Values.services.monitoring.port | quote }}
      labels:
        app: papyrus
        {{- include "papyrus.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "papyrus.name" . }}-data
        {{- if .Values.backup.enabled }}
        - name: run
          configMap:
            name: {{ template "papyrus.name" . }}-run
            defaultMode: 0777
        {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ template "papyrus.name" . }}
        image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
        imagePullPolicy: {{ .Values.deployment.pullPolicy }}
        resources:
          limits:
            cpu: {{ .Values.deployment.resources.limits.cpu | quote }}
            memory: {{ .Values.deployment.resources.limits.memory }}
          requests:
            cpu: {{ .Values.deployment.resources.requests.cpu | quote}}
            memory: {{ .Values.deployment.resources.requests.memory }}
        {{- if not .Values.backup.enabled }}
        args:
        - --config_file
        - /app/config/presets/{{ .Values.starknet.preset }}
        - --base_layer.node_url
        - {{ .Values.base_layer_node_url }}
        {{- if .Values.services }}
        ports:
        - containerPort: {{ .Values.services.rpc.port }}
        - containerPort: {{ .Values.services.monitoring.port }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /app/data
        envFrom:
        - configMapRef:
            name: {{ template "papyrus.name" . }}-config
        {{- else }}
        command:
        - sh
        - -c
        - /app/run/backup.sh
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: run
          mountPath: /app/run
        envFrom:
        - configMapRef:
            name: {{ template "papyrus.name" . }}-config
        - secretRef:
            name: {{ template "papyrus.name" . }}-aws-creds
        {{- end }}
