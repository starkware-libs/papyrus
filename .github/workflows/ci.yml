name: CI

on:
  push:
    branches: [main]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - auto_merge_enabled
  merge_group:
    types: [checks_requested]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install commitlint
        run: npm install -g @commitlint/cli @commitlint/config-conventional

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: commitlint --from=${{ github.event.before }} --to=${{ github.sha }} --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: npm install -g ganache@7.4.3
      - run: |
          cargo test

  build-load-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo build -p papyrus_load_test

  integration-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: >
          cargo run -p papyrus_node --bin starknet_feeder_gateway_client_integration_test;
          cargo run -p papyrus_node --bin central_source_integration_test

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: rustfmt
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2022-11-03 fmt --all -- --check

  udeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: "Rust Toolchain Setup"
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
          override: true
      - uses: actions/cache@v3
        name: "Cache Setup"
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run:
          wget https://github.com/est31/cargo-udeps/releases/download/v0.1.35/cargo-udeps-v0.1.35-x86_64-unknown-linux-gnu.tar.gz;
          tar -xzf cargo-udeps-v0.1.35-x86_64-unknown-linux-gnu.tar.gz;
          cargo-udeps-v0.1.35-x86_64-unknown-linux-gnu/cargo-udeps udeps --all-targets
        env:
          RUSTUP_TOOLCHAIN: nightly-2022-11-03

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: >
          cargo clippy --all-targets --all-features -- -D warnings -D future-incompatible
          -D nonstandard-style -D rust-2018-idioms -D unused

  doc:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --document-private-items --no-deps

  check:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --all-features

  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Set-Up
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm libudev-dev protobuf-compiler
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - uses: Swatinem/rust-cache@v2
      - run: npm install -g ganache@7.4.3
      - name: Coverage
        run: cargo llvm-cov --codecov --output-path codecov.json
        env:
          SEED: 0
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true
          fail_ci_if_error: true
          version: "v0.1.15"

  check-starknet_api-dependency:
    runs-on: ubuntu-latest
    if: github.base_ref == 'main' # this step is only run if the pr is to the main branch
    steps:
      - uses: actions/checkout@v2
        with:
          toolchain: stable
      - run: sudo apt-get install jq
      - run: ./check_starknet_api_version_dependency.sh # this script checks that if the starknet_api dependency is by git rev then this rev (commit) is on main
